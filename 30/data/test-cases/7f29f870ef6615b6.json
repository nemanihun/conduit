{"uid":"7f29f870ef6615b6","name":"test_data_download","fullName":"Tests.Automata teszt.test_conduit.TestConduit#test_data_download","historyId":"fc981a1e49b86e955fd5d4fd5d65649e","time":{"start":1681651615825,"stop":1681651627421,"duration":11596},"status":"failed","statusMessage":"AssertionError: assert 5 == 29\n +  where 5 = <model.ManipulatePages object at 0x7f23f4273eb0>.article_amount","statusTrace":"self = <test_conduit.TestConduit object at 0x7f23f52febc0>\n\n    def test_data_download(self):\n        manipulatepages = model.ManipulatePages()\n    \n        getusers = model.GetUsers()\n    \n        print()\n        print('ATC 11 - Adatok lementése felületről/Cikkek címének lementése csv-be')\n        print()\n    \n        # Bejelentkezem az alkalmazásba.\n        getusers.signin(self.browser, 'user1')\n        time.sleep(5)\n        # Megvárom, amíg megjelenik a \"Log out\" gomb az oldalon.\n        getusers.logout_btn(self.browser)\n    \n        # Letöltöm a testuser1 felhasználó cikkeinek címét a weboldalról.\n        article = manipulatepages.article_download(self.browser, 'saved.csv')\n    \n        print()\n        print(\n            'Elvárt eredmény: A cikkek címének lementése sikeres. A cikkek címe megtalálható a csv fileban. A lementendő cikk címek száma és a csv file-ban található cikkek száma megegyezik.')\n        print()\n    \n        # Megvizsgálom, a lementedő cikkek száma megegyezik-e a csv file-ban található cikkek számával.\n    \n>       assert manipulatepages.article_amount == article\nE       assert 5 == 29\nE        +  where 5 = <model.ManipulatePages object at 0x7f23f4273eb0>.article_amount\n\nTests/Automata teszt/test_conduit.py:342: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681651614753,"stop":1681651615824,"duration":1071},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 29\n +  where 5 = <model.ManipulatePages object at 0x7f23f4273eb0>.article_amount","statusTrace":"self = <test_conduit.TestConduit object at 0x7f23f52febc0>\n\n    def test_data_download(self):\n        manipulatepages = model.ManipulatePages()\n    \n        getusers = model.GetUsers()\n    \n        print()\n        print('ATC 11 - Adatok lementése felületről/Cikkek címének lementése csv-be')\n        print()\n    \n        # Bejelentkezem az alkalmazásba.\n        getusers.signin(self.browser, 'user1')\n        time.sleep(5)\n        # Megvárom, amíg megjelenik a \"Log out\" gomb az oldalon.\n        getusers.logout_btn(self.browser)\n    \n        # Letöltöm a testuser1 felhasználó cikkeinek címét a weboldalról.\n        article = manipulatepages.article_download(self.browser, 'saved.csv')\n    \n        print()\n        print(\n            'Elvárt eredmény: A cikkek címének lementése sikeres. A cikkek címe megtalálható a csv fileban. A lementendő cikk címek száma és a csv file-ban található cikkek száma megegyezik.')\n        print()\n    \n        # Megvizsgálom, a lementedő cikkek száma megegyezik-e a csv file-ban található cikkek számával.\n    \n>       assert manipulatepages.article_amount == article\nE       assert 5 == 29\nE        +  where 5 = <model.ManipulatePages object at 0x7f23f4273eb0>.article_amount\n\nTests/Automata teszt/test_conduit.py:342: AssertionError","steps":[],"attachments":[{"uid":"d5d5e3c66948777c","name":"stdout","source":"d5d5e3c66948777c.txt","type":"text/plain","size":3075}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681651627428,"stop":1681651627484,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests.Automata teszt"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az257-809"},{"name":"thread","value":"3070-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Automata teszt.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7f29f870ef6615b6.json","parameterValues":[]}