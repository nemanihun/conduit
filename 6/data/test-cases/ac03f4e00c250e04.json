{"uid":"ac03f4e00c250e04","name":"test_logout","fullName":"Tests.Automata teszt.test_conduit.TestConduit#test_logout","historyId":"257fe6d39ccd5899c5173cfbf6bfae4e","time":{"start":1680725318433,"stop":1680725328893,"duration":10460},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561cb0dae243 <unknown>\n#1 0x561cb0b727a6 <unknown>\n#2 0x561cb0baf64d <unknown>\n#3 0x561cb0baf761 <unknown>\n#4 0x561cb0beada4 <unknown>\n#5 0x561cb0bd00ad <unknown>\n#6 0x561cb0be8932 <unknown>\n#7 0x561cb0bcfe53 <unknown>\n#8 0x561cb0ba29ea <unknown>\n#9 0x561cb0ba3b2e <unknown>\n#10 0x561cb0e02d5e <unknown>\n#11 0x561cb0e06a80 <unknown>\n#12 0x561cb0de88b0 <unknown>\n#13 0x561cb0e07b63 <unknown>\n#14 0x561cb0dd9f75 <unknown>\n#15 0x561cb0e2a998 <unknown>\n#16 0x561cb0e2ab27 <unknown>\n#17 0x561cb0e45c23 <unknown>\n#18 0x7fca53aa3b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f6d99a22770>\n\n    def test_logout(self):\n        getusers = model.GetUsers()\n    \n        required_data = {\n            'test_name': 'TestCase 03 - Kijelentkezés',\n            'expected_result': 'Sikeres kijelentkezés után látszik a \"Sign in\" gomb',\n            'actual_result': 'Sikeres kijelentkezés, látszik a \"Sign in\" gomb',\n    \n        }\n    \n        testcase3 = model.Testcase(\n            test_name=required_data['test_name'],\n            expected_result=required_data['expected_result'],\n            actual_result=required_data['actual_result'],\n    \n        )\n    \n        testcase3.teszt_nev()\n        testcase3.teszt_start()\n    \n        getusers.signin(self.browser, 'user2')\n    \n>       WebDriverWait(self.browser, 10).until(\n            EC.presence_of_element_located((By.CLASS_NAME, 'ion-android-exit')))\n\nTests/Automata teszt/test_conduit.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b7d030b92c5766d2e3782dcca471e67d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f6d9992f250>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561cb0dae243 <unknown>\nE       #1 0x561cb0b727a6 <unknown>\nE       #2 0x561cb0baf64d <unknown>\nE       #3 0x561cb0baf761 <unknown>\nE       #4 0x561cb0beada4 <unknown>\nE       #5 0x561cb0bd00ad <unknown>\nE       #6 0x561cb0be8932 <unknown>\nE       #7 0x561cb0bcfe53 <unknown>\nE       #8 0x561cb0ba29ea <unknown>\nE       #9 0x561cb0ba3b2e <unknown>\nE       #10 0x561cb0e02d5e <unknown>\nE       #11 0x561cb0e06a80 <unknown>\nE       #12 0x561cb0de88b0 <unknown>\nE       #13 0x561cb0e07b63 <unknown>\nE       #14 0x561cb0dd9f75 <unknown>\nE       #15 0x561cb0e2a998 <unknown>\nE       #16 0x561cb0e2ab27 <unknown>\nE       #17 0x561cb0e45c23 <unknown>\nE       #18 0x7fca53aa3b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680725307351,"stop":1680725318432,"duration":11081},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561cb0dae243 <unknown>\n#1 0x561cb0b727a6 <unknown>\n#2 0x561cb0baf64d <unknown>\n#3 0x561cb0baf761 <unknown>\n#4 0x561cb0beada4 <unknown>\n#5 0x561cb0bd00ad <unknown>\n#6 0x561cb0be8932 <unknown>\n#7 0x561cb0bcfe53 <unknown>\n#8 0x561cb0ba29ea <unknown>\n#9 0x561cb0ba3b2e <unknown>\n#10 0x561cb0e02d5e <unknown>\n#11 0x561cb0e06a80 <unknown>\n#12 0x561cb0de88b0 <unknown>\n#13 0x561cb0e07b63 <unknown>\n#14 0x561cb0dd9f75 <unknown>\n#15 0x561cb0e2a998 <unknown>\n#16 0x561cb0e2ab27 <unknown>\n#17 0x561cb0e45c23 <unknown>\n#18 0x7fca53aa3b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f6d99a22770>\n\n    def test_logout(self):\n        getusers = model.GetUsers()\n    \n        required_data = {\n            'test_name': 'TestCase 03 - Kijelentkezés',\n            'expected_result': 'Sikeres kijelentkezés után látszik a \"Sign in\" gomb',\n            'actual_result': 'Sikeres kijelentkezés, látszik a \"Sign in\" gomb',\n    \n        }\n    \n        testcase3 = model.Testcase(\n            test_name=required_data['test_name'],\n            expected_result=required_data['expected_result'],\n            actual_result=required_data['actual_result'],\n    \n        )\n    \n        testcase3.teszt_nev()\n        testcase3.teszt_start()\n    \n        getusers.signin(self.browser, 'user2')\n    \n>       WebDriverWait(self.browser, 10).until(\n            EC.presence_of_element_located((By.CLASS_NAME, 'ion-android-exit')))\n\nTests/Automata teszt/test_conduit.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b7d030b92c5766d2e3782dcca471e67d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f6d9992f250>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561cb0dae243 <unknown>\nE       #1 0x561cb0b727a6 <unknown>\nE       #2 0x561cb0baf64d <unknown>\nE       #3 0x561cb0baf761 <unknown>\nE       #4 0x561cb0beada4 <unknown>\nE       #5 0x561cb0bd00ad <unknown>\nE       #6 0x561cb0be8932 <unknown>\nE       #7 0x561cb0bcfe53 <unknown>\nE       #8 0x561cb0ba29ea <unknown>\nE       #9 0x561cb0ba3b2e <unknown>\nE       #10 0x561cb0e02d5e <unknown>\nE       #11 0x561cb0e06a80 <unknown>\nE       #12 0x561cb0de88b0 <unknown>\nE       #13 0x561cb0e07b63 <unknown>\nE       #14 0x561cb0dd9f75 <unknown>\nE       #15 0x561cb0e2a998 <unknown>\nE       #16 0x561cb0e2ab27 <unknown>\nE       #17 0x561cb0e45c23 <unknown>\nE       #18 0x7fca53aa3b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"3b6f81b8f7887396","name":"stdout","source":"3b6f81b8f7887396.txt","type":"text/plain","size":185}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680725328900,"stop":1680725328956,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests.Automata teszt"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az313-1"},{"name":"thread","value":"3013-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Automata teszt.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ac03f4e00c250e04.json","parameterValues":[]}