{"uid":"53912f8d2b981c02","name":"test_signin","fullName":"Tests.Automata teszt.test_conduit.TestConduit#test_signin","historyId":"a3132a100faf3ea2f7f312c8438eaf23","time":{"start":1681598634331,"stop":1681598639856,"duration":5525},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559083c33fe3 <unknown>\n#1 0x559083972d36 <unknown>\n#2 0x5590839afc4d <unknown>\n#3 0x5590839afd61 <unknown>\n#4 0x5590839eb6a4 <unknown>\n#5 0x5590839d08ed <unknown>\n#6 0x5590839e9232 <unknown>\n#7 0x5590839d0693 <unknown>\n#8 0x5590839a303a <unknown>\n#9 0x5590839a417e <unknown>\n#10 0x559083bf5dbd <unknown>\n#11 0x559083bf9c6c <unknown>\n#12 0x559083c034b0 <unknown>\n#13 0x559083bfad63 <unknown>\n#14 0x559083bcdc35 <unknown>\n#15 0x559083c1e138 <unknown>\n#16 0x559083c1e2c7 <unknown>\n#17 0x559083c2c093 <unknown>\n#18 0x7f476536db43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7fe3de8a3400>\n\n    def test_signin(self):\n        getusers = model.GetUsers()\n    \n        print()\n        print('ATC 02 - Bejelentkezés')\n        print()\n    \n        getusers.signin(self.browser, 'user1')\n    \n        print()\n        print('Elvárt eredmény: Sikeres bejelentkezés után látszik a \"Log out\" gomb.')\n        print()\n    \n>       assert getusers.logout_btn(self.browser).is_displayed()\n\nTests/Automata teszt/test_conduit.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests/Automata teszt/model.py:103: in logout_btn\n    return WebDriverWait(browser, 5).until(EC.presence_of_element_located((By.CLASS_NAME, 'ion-android-exit')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94c47c53333fc1de4dd379e4c2d38ff1\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fe3de937400>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x559083c33fe3 <unknown>\nE       #1 0x559083972d36 <unknown>\nE       #2 0x5590839afc4d <unknown>\nE       #3 0x5590839afd61 <unknown>\nE       #4 0x5590839eb6a4 <unknown>\nE       #5 0x5590839d08ed <unknown>\nE       #6 0x5590839e9232 <unknown>\nE       #7 0x5590839d0693 <unknown>\nE       #8 0x5590839a303a <unknown>\nE       #9 0x5590839a417e <unknown>\nE       #10 0x559083bf5dbd <unknown>\nE       #11 0x559083bf9c6c <unknown>\nE       #12 0x559083c034b0 <unknown>\nE       #13 0x559083bfad63 <unknown>\nE       #14 0x559083bcdc35 <unknown>\nE       #15 0x559083c1e138 <unknown>\nE       #16 0x559083c1e2c7 <unknown>\nE       #17 0x559083c2c093 <unknown>\nE       #18 0x7f476536db43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681598623268,"stop":1681598634330,"duration":11062},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559083c33fe3 <unknown>\n#1 0x559083972d36 <unknown>\n#2 0x5590839afc4d <unknown>\n#3 0x5590839afd61 <unknown>\n#4 0x5590839eb6a4 <unknown>\n#5 0x5590839d08ed <unknown>\n#6 0x5590839e9232 <unknown>\n#7 0x5590839d0693 <unknown>\n#8 0x5590839a303a <unknown>\n#9 0x5590839a417e <unknown>\n#10 0x559083bf5dbd <unknown>\n#11 0x559083bf9c6c <unknown>\n#12 0x559083c034b0 <unknown>\n#13 0x559083bfad63 <unknown>\n#14 0x559083bcdc35 <unknown>\n#15 0x559083c1e138 <unknown>\n#16 0x559083c1e2c7 <unknown>\n#17 0x559083c2c093 <unknown>\n#18 0x7f476536db43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7fe3de8a3400>\n\n    def test_signin(self):\n        getusers = model.GetUsers()\n    \n        print()\n        print('ATC 02 - Bejelentkezés')\n        print()\n    \n        getusers.signin(self.browser, 'user1')\n    \n        print()\n        print('Elvárt eredmény: Sikeres bejelentkezés után látszik a \"Log out\" gomb.')\n        print()\n    \n>       assert getusers.logout_btn(self.browser).is_displayed()\n\nTests/Automata teszt/test_conduit.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests/Automata teszt/model.py:103: in logout_btn\n    return WebDriverWait(browser, 5).until(EC.presence_of_element_located((By.CLASS_NAME, 'ion-android-exit')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94c47c53333fc1de4dd379e4c2d38ff1\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fe3de937400>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x559083c33fe3 <unknown>\nE       #1 0x559083972d36 <unknown>\nE       #2 0x5590839afc4d <unknown>\nE       #3 0x5590839afd61 <unknown>\nE       #4 0x5590839eb6a4 <unknown>\nE       #5 0x5590839d08ed <unknown>\nE       #6 0x5590839e9232 <unknown>\nE       #7 0x5590839d0693 <unknown>\nE       #8 0x5590839a303a <unknown>\nE       #9 0x5590839a417e <unknown>\nE       #10 0x559083bf5dbd <unknown>\nE       #11 0x559083bf9c6c <unknown>\nE       #12 0x559083c034b0 <unknown>\nE       #13 0x559083bfad63 <unknown>\nE       #14 0x559083bcdc35 <unknown>\nE       #15 0x559083c1e138 <unknown>\nE       #16 0x559083c1e2c7 <unknown>\nE       #17 0x559083c2c093 <unknown>\nE       #18 0x7f476536db43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"73b320b6cf49d3de","name":"stdout","source":"73b320b6cf49d3de.txt","type":"text/plain","size":225}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681598639909,"stop":1681598639970,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests.Automata teszt"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az166-556"},{"name":"thread","value":"3066-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Automata teszt.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"53912f8d2b981c02.json","parameterValues":[]}