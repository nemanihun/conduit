{"uid":"6a6dd066104d7ba5","name":"test_logout","fullName":"Tests.Automata teszt.test_conduit.TestConduit#test_logout","historyId":"257fe6d39ccd5899c5173cfbf6bfae4e","time":{"start":1680723956295,"stop":1680723966712,"duration":10417},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5621e32de243 <unknown>\n#1 0x5621e30a27a6 <unknown>\n#2 0x5621e30df64d <unknown>\n#3 0x5621e30df761 <unknown>\n#4 0x5621e311ada4 <unknown>\n#5 0x5621e31000ad <unknown>\n#6 0x5621e3118932 <unknown>\n#7 0x5621e30ffe53 <unknown>\n#8 0x5621e30d29ea <unknown>\n#9 0x5621e30d3b2e <unknown>\n#10 0x5621e3332d5e <unknown>\n#11 0x5621e3336a80 <unknown>\n#12 0x5621e33188b0 <unknown>\n#13 0x5621e3337b63 <unknown>\n#14 0x5621e3309f75 <unknown>\n#15 0x5621e335a998 <unknown>\n#16 0x5621e335ab27 <unknown>\n#17 0x5621e3375c23 <unknown>\n#18 0x7f9b5bd45b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5af80067a0>\n\n    def test_logout(self):\n        getusers = model.GetUsers()\n    \n        required_data = {\n            'test_name': 'TestCase 03 - Kijelentkezés',\n            'expected_result': 'Sikeres kijelentkezés után látszik a \"Sign in\" gomb',\n            'actual_result': 'Sikeres kijelentkezés, látszik a \"Sign in\" gomb',\n    \n        }\n    \n        testcase3 = model.Testcase(\n            test_name=required_data['test_name'],\n            expected_result=required_data['expected_result'],\n            actual_result=required_data['actual_result'],\n    \n        )\n    \n        testcase3.teszt_nev()\n        testcase3.teszt_start()\n    \n        getusers.signin(self.browser, 'user2')\n    \n>       WebDriverWait(self.browser, 10).until(\n            EC.presence_of_element_located((By.CLASS_NAME, 'ion-android-exit')))\n\nTests/Automata teszt/test_conduit.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"750cc9aa8f94ed8f023f28617cd69aca\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f5af7f13250>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5621e32de243 <unknown>\nE       #1 0x5621e30a27a6 <unknown>\nE       #2 0x5621e30df64d <unknown>\nE       #3 0x5621e30df761 <unknown>\nE       #4 0x5621e311ada4 <unknown>\nE       #5 0x5621e31000ad <unknown>\nE       #6 0x5621e3118932 <unknown>\nE       #7 0x5621e30ffe53 <unknown>\nE       #8 0x5621e30d29ea <unknown>\nE       #9 0x5621e30d3b2e <unknown>\nE       #10 0x5621e3332d5e <unknown>\nE       #11 0x5621e3336a80 <unknown>\nE       #12 0x5621e33188b0 <unknown>\nE       #13 0x5621e3337b63 <unknown>\nE       #14 0x5621e3309f75 <unknown>\nE       #15 0x5621e335a998 <unknown>\nE       #16 0x5621e335ab27 <unknown>\nE       #17 0x5621e3375c23 <unknown>\nE       #18 0x7f9b5bd45b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680723950137,"stop":1680723956295,"duration":6158},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5621e32de243 <unknown>\n#1 0x5621e30a27a6 <unknown>\n#2 0x5621e30df64d <unknown>\n#3 0x5621e30df761 <unknown>\n#4 0x5621e311ada4 <unknown>\n#5 0x5621e31000ad <unknown>\n#6 0x5621e3118932 <unknown>\n#7 0x5621e30ffe53 <unknown>\n#8 0x5621e30d29ea <unknown>\n#9 0x5621e30d3b2e <unknown>\n#10 0x5621e3332d5e <unknown>\n#11 0x5621e3336a80 <unknown>\n#12 0x5621e33188b0 <unknown>\n#13 0x5621e3337b63 <unknown>\n#14 0x5621e3309f75 <unknown>\n#15 0x5621e335a998 <unknown>\n#16 0x5621e335ab27 <unknown>\n#17 0x5621e3375c23 <unknown>\n#18 0x7f9b5bd45b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5af80067a0>\n\n    def test_logout(self):\n        getusers = model.GetUsers()\n    \n        required_data = {\n            'test_name': 'TestCase 03 - Kijelentkezés',\n            'expected_result': 'Sikeres kijelentkezés után látszik a \"Sign in\" gomb',\n            'actual_result': 'Sikeres kijelentkezés, látszik a \"Sign in\" gomb',\n    \n        }\n    \n        testcase3 = model.Testcase(\n            test_name=required_data['test_name'],\n            expected_result=required_data['expected_result'],\n            actual_result=required_data['actual_result'],\n    \n        )\n    \n        testcase3.teszt_nev()\n        testcase3.teszt_start()\n    \n        getusers.signin(self.browser, 'user2')\n    \n>       WebDriverWait(self.browser, 10).until(\n            EC.presence_of_element_located((By.CLASS_NAME, 'ion-android-exit')))\n\nTests/Automata teszt/test_conduit.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"750cc9aa8f94ed8f023f28617cd69aca\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f5af7f13250>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5621e32de243 <unknown>\nE       #1 0x5621e30a27a6 <unknown>\nE       #2 0x5621e30df64d <unknown>\nE       #3 0x5621e30df761 <unknown>\nE       #4 0x5621e311ada4 <unknown>\nE       #5 0x5621e31000ad <unknown>\nE       #6 0x5621e3118932 <unknown>\nE       #7 0x5621e30ffe53 <unknown>\nE       #8 0x5621e30d29ea <unknown>\nE       #9 0x5621e30d3b2e <unknown>\nE       #10 0x5621e3332d5e <unknown>\nE       #11 0x5621e3336a80 <unknown>\nE       #12 0x5621e33188b0 <unknown>\nE       #13 0x5621e3337b63 <unknown>\nE       #14 0x5621e3309f75 <unknown>\nE       #15 0x5621e335a998 <unknown>\nE       #16 0x5621e335ab27 <unknown>\nE       #17 0x5621e3375c23 <unknown>\nE       #18 0x7f9b5bd45b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"839db8ea2af35f67","name":"stdout","source":"839db8ea2af35f67.txt","type":"text/plain","size":185}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680723966718,"stop":1680723966777,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests.Automata teszt"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az389-890"},{"name":"thread","value":"3157-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Automata teszt.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6a6dd066104d7ba5.json","parameterValues":[]}