{"uid":"42099fefbb8f683","name":"test_new_data_upload","fullName":"Tests.Automata teszt.test_conduit.TestConduit#test_new_data_upload","historyId":"bf4d7346fb76092b40b8d2e2d5a5c349","time":{"start":1681476029595,"stop":1681476030349,"duration":754},"status":"broken","statusMessage":"AttributeError: type object 'Articles' has no attribute 'article3_data'. Did you mean: 'article1_data'?","statusTrace":"self = <test_conduit.TestConduit object at 0x7fcd3f01add0>\n\n    def test_new_data_upload(self):\n        manipulatepages = model.ManipulatePages()\n    \n        getusers = model.GetUsers()\n    \n        article = 'article3_data'\n    \n        print()\n        print('ATC 07 - Új adat bevitele')\n        print()\n    \n        # Bejelentkezem az alkalmazásba.\n        getusers.signin(self.browser, 'user1')\n    \n        # Megvárom, amíg megjelenik a \"Log out\" gomb az oldalon.\n        getusers.logout_btn(self.browser)\n    \n        # Feltöltök egy új cikket.\n>       article_info = manipulatepages.new_article_upload(self.browser, article)\n\nTests/Automata teszt/test_conduit.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests/Automata teszt/model.py:362: in new_article_upload\n    self.articledata(article)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <model.ManipulatePages object at 0x7fcd3f0c9d20>, adata = 'article3_data'\n\n    def articledata(self, adata):\n    \n        articles = ''\n    \n        if adata == 'article1_data':\n            articles = adatok.Articles.article1_data.values()\n        if adata == 'article2_data':\n            articles = adatok.Articles.article2_data.values()\n        if adata == 'article3_data':\n>           articles = adatok.Articles.article3_data.values()\nE           AttributeError: type object 'Articles' has no attribute 'article3_data'. Did you mean: 'article1_data'?\n\nTests/Automata teszt/model.py:211: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681476026549,"stop":1681476029595,"duration":3046},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: type object 'Articles' has no attribute 'article3_data'. Did you mean: 'article1_data'?","statusTrace":"self = <test_conduit.TestConduit object at 0x7fcd3f01add0>\n\n    def test_new_data_upload(self):\n        manipulatepages = model.ManipulatePages()\n    \n        getusers = model.GetUsers()\n    \n        article = 'article3_data'\n    \n        print()\n        print('ATC 07 - Új adat bevitele')\n        print()\n    \n        # Bejelentkezem az alkalmazásba.\n        getusers.signin(self.browser, 'user1')\n    \n        # Megvárom, amíg megjelenik a \"Log out\" gomb az oldalon.\n        getusers.logout_btn(self.browser)\n    \n        # Feltöltök egy új cikket.\n>       article_info = manipulatepages.new_article_upload(self.browser, article)\n\nTests/Automata teszt/test_conduit.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests/Automata teszt/model.py:362: in new_article_upload\n    self.articledata(article)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <model.ManipulatePages object at 0x7fcd3f0c9d20>, adata = 'article3_data'\n\n    def articledata(self, adata):\n    \n        articles = ''\n    \n        if adata == 'article1_data':\n            articles = adatok.Articles.article1_data.values()\n        if adata == 'article2_data':\n            articles = adatok.Articles.article2_data.values()\n        if adata == 'article3_data':\n>           articles = adatok.Articles.article3_data.values()\nE           AttributeError: type object 'Articles' has no attribute 'article3_data'. Did you mean: 'article1_data'?\n\nTests/Automata teszt/model.py:211: AttributeError","steps":[],"attachments":[{"uid":"734d7a96b20a3a37","name":"stdout","source":"734d7a96b20a3a37.txt","type":"text/plain","size":151}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681476030411,"stop":1681476030466,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests.Automata teszt"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az244-104"},{"name":"thread","value":"3118-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Automata teszt.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"42099fefbb8f683.json","parameterValues":[]}