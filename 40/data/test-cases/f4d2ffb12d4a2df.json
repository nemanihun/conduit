{"uid":"f4d2ffb12d4a2df","name":"Több oldalas lista bejárása","fullName":"Tests.Automata teszt.test_conduit.TestConduit#test_multi_page_listing","historyId":"f19b345498462f4ac15a6da340d45291","time":{"start":1681687012484,"stop":1681687018965,"duration":6481},"status":"failed","statusMessage":"AssertionError: assert 3 == 2","statusTrace":"self = <test_conduit.TestConduit object at 0x7fcfddb6aa40>\n\n    @allure.id('ATC 06')\n    @allure.title('Több oldalas lista bejárása')\n    def test_multi_page_listing(self):\n        manipulatepages = model.ManipulatePages()\n    \n        getusers = model.GetUsers()\n    \n        print()\n        print('ATC 06 - Több oldalas lista bejárása')\n        print()\n    \n        # Bejelentkezem az alkalmazásba.\n        getusers.signin(self.browser, 'user1')\n    \n        # Megvárom, amíg megjelenik a \"Log out\" gomb az oldalon.\n        getusers.logout_btn(self.browser)\n    \n        # Végig lépegetek a lista oldalain.\n        page_numbers = manipulatepages.multi_page_list_explore(self.browser)\n        total_pages = page_numbers['total']\n        active_page_nr = page_numbers['active']\n    \n        print()\n        print('Elvárt eredmény: Végig lépegetve az oldalakon, elérek a lista utolsó oldaláig.')\n        print()\n    \n        # Megvizsgálom, hogy az utolsó oldal száma megegyezik-e a lista összes oldalának mennyiségével. Ha a két szám megegyezik, eljutottam a lista utolsó oldalára.\n>       assert active_page_nr == total_pages\nE       assert 3 == 2\n\nTests/Automata teszt/test_conduit.py:179: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681687009464,"stop":1681687012484,"duration":3020},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2","statusTrace":"self = <test_conduit.TestConduit object at 0x7fcfddb6aa40>\n\n    @allure.id('ATC 06')\n    @allure.title('Több oldalas lista bejárása')\n    def test_multi_page_listing(self):\n        manipulatepages = model.ManipulatePages()\n    \n        getusers = model.GetUsers()\n    \n        print()\n        print('ATC 06 - Több oldalas lista bejárása')\n        print()\n    \n        # Bejelentkezem az alkalmazásba.\n        getusers.signin(self.browser, 'user1')\n    \n        # Megvárom, amíg megjelenik a \"Log out\" gomb az oldalon.\n        getusers.logout_btn(self.browser)\n    \n        # Végig lépegetek a lista oldalain.\n        page_numbers = manipulatepages.multi_page_list_explore(self.browser)\n        total_pages = page_numbers['total']\n        active_page_nr = page_numbers['active']\n    \n        print()\n        print('Elvárt eredmény: Végig lépegetve az oldalakon, elérek a lista utolsó oldaláig.')\n        print()\n    \n        # Megvizsgálom, hogy az utolsó oldal száma megegyezik-e a lista összes oldalának mennyiségével. Ha a két szám megegyezik, eljutottam a lista utolsó oldalára.\n>       assert active_page_nr == total_pages\nE       assert 3 == 2\n\nTests/Automata teszt/test_conduit.py:179: AssertionError","steps":[],"attachments":[{"uid":"158f011c487d6047","name":"stdout","source":"158f011c487d6047.txt","type":"text/plain","size":379}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681687019009,"stop":1681687019065,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"as_id","value":"ATC 06"},{"name":"parentSuite","value":"Tests.Automata teszt"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az360-505"},{"name":"thread","value":"3065-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Automata teszt.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f4d2ffb12d4a2df.json","parameterValues":[]}